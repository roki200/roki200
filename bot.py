#–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Å RP –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ (–∫–æ–¥ –Ω–µ —Å–æ–≤—Å–µ–º –º–æ–π)
#–æ—Ä–∏–≥–∏–Ω–∞–ª @Krasbot
from time import sleep

import mybot as mybot
from pyrogram.errors import FloodWait

import config
import random

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.utils import executor
from filters import IsAdminFilter

bot = Bot(token=config.TOKEN, parse_mode="html")
dp = Dispatcher(bot)

dp.filters_factory.bind(IsAdminFilter)


@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    await message.reply(
        f"""–ü—Ä–∏–≤–µ—Ç <a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a>, —è –ö–æ—Ç—ë–Ω–æ–∫üò∏ . –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help""")


###########–∫–æ–º–∞–Ω–¥—ã

@dp.message_handler(commands=['help'])
async def help_message(message: types.Message):
    await message.reply(
        "–ú–æ–∏ RP –∫–æ–º–∞–Ω–¥—ã(–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–∏—à—É—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ):\n gay - –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –≥–µ–π (–≤—Å–µ —Ä–∞–Ω–¥–æ–º–Ω–æ –∏ –Ω–µ —Å—Ç–æ–∏—Ç –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ—Ä—å–µ–∑.) ;\n  –°–Ω—è—Ç—å —à—Ç–∞–Ω—ã\n  –ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å\n  –í—ã–µ–±–∞—Ç—å\n  –û–±–Ω—è—Ç—å\n  –ü–Ω—É—Ç—å\n  –£—â–∏–ø–Ω—É—Ç—å\n  –£—â–∏–ø–Ω—É—Ç—å –ø–æ–ø–∫—É\n  –ü–æ–∂–∞—Ç—å —Ä—É–∫—É\n  –ü–æ—Ç—Ä–æ–≥–∞—Ç—å —á–ª–µ–Ω\n  –¢—Ä–∞—Ö–Ω—É—Ç—å\n  –ñ–µ–Ω–∏—Ç—Å—è-–ñ–µ–Ω–∏—Ç—å—Å—è –Ω–∞ –∫–æ–≥–æ-—Ç–æ\n  –ü–æ–¥—Ä–æ—á–∏—Ç—å-–ø–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞ –∫–æ–≥–æ-—Ç–æ\n  –ü–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞-–ø–æ—á—Ç–∏ —Ç–æ–∂–µ —Å–∞–º–æ–µ –∫–∞–∫ –ø–æ–¥—Ä–æ—á–∏—Ç—å\n  –£–¥–∞—Ä–∏—Ç—å\n  –£–¥–∞—Ä–∏—Ç—å —Å–∫–æ–≤–æ—Ä–æ–¥–∫–æ–π\n  –ö–æ–≥–¥–∞ —è —É–º—Ä—É")




@dp.message_handler(Text("!–ª–æ—Ö", ignore_case=True))
async def gay_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –ª–æ—Ö ü§ì –Ω–∞ {random.randint(00,100)}%""")


@dp.message_handler(commands=["filters"])
async def filters_message(message: types.Message):
    await message.reply()



@dp.message_handler(Text("—Ä–æ–∫–∏", ignore_case=True))
async def kras_message(message: types.Message):
    await message.reply(
        "–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ –≤–º–µ—à–∏–≤–∞—é—Å—å, —è –µ–≥–æ –±–æ—Ç, –µ—Å–ª–∏ –æ–Ω –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –º–Ω–µ –≤ –ª–∏—á–∫—É, —è –ø–µ—Ä–µ–¥–∞–º.")


@dp.message_handler(Text("–±–æ—Ç", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–Ø —Ç—É—Ç. –ù–∞—Ö—É–π –∑–≤–∞–ª ?")


@dp.message_handler(Text("–ø—Ä–∏–≤–µ—Ç", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç–∏–∫ü•∫")


@dp.message_handler(Text("–≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç–∏–∫ü•∫")


@dp.message_handler(Text("–±—Ä–∞–∫–∏", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–í–∞–º –ø–æ 10 –ª–µ—Ç. –ö–∞–∫–∏–µ –Ω–∞—Ö—É–π –±—Ä–∞–∫–∏?!")


@dp.message_handler(Text("–º–æ–π –±—Ä–∞–∫", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–õ–æ–ª —á–µ–ª. –¢–µ–±–µ 10 –ª–µ—Ç, –∏ —Ç—ã –≤ –±—Ä–∞–∫–µ...?")


@dp.message_handler(Text("–ø–∏–Ω–≥", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–ü–û–ù–ì")


@dp.message_handler(Text(".ping", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("PONG")


@dp.message_handler(content_types=["new_chat_members"])
async def new_member_message(message: types.Message):
    await message.answer(
        f"""–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è <a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a>, –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º —á–∞—Ç–µ, –Ω–æ –ø—Ä–æ—à—É —Ç–µ–±—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –∏—Ö! """)


@dp.message_handler(content_types=["left_chat_member"])
async def left_member_message(message: types.Message):
    await message.reply("–ë–ª—è, –º–∏–Ω—É—Å –æ–¥–∏–Ω –ø–∏–¥–æ—Ä. –ù—É –∏ –ø–æ—à—ë–ª –æ–Ω –≤ –ø–∏–∑–¥—É.)")

@dp.message_handler(Text("–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π", ignore_case=True))
async def bot_message(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤—Å–µ—Ö, –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º —á–∞—Ç–µ, –Ω–æ –ø—Ä–æ—à—É –≤–∞—Å —Å–∫–∏–Ω—É—Ç—å —Å–∏—Å—å–∫–∏ –º–Ω–µ –≤ –ª—Åü•∫ü•∫ ")


@dp.message_handler(Text("—Å–Ω—è—Ç—å —à—Ç–∞–Ω—ã", ignore_case=True))
async def take_off_pants_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —Å–Ω—è–ª —à—Ç–∞–Ω—ã ü©≥üîû  —É <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("gay", ignore_case=True))
async def gay_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –≥–µ–π üè≥Ô∏è‚Äçüåà üë¨  –Ω–∞ {random.randint(0, 100)}%""")


@dp.message_handler(Text("–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å", ignore_case=True))
async def kiss_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    y = ["üòö", "üòô", "üòó", "üòò"]
    o = random.choice(y)
    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Ü–µ–ª–æ–≤–∞–ª {o}  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–≤—ã–µ–±–∞—Ç—å", ignore_case=True))
async def fuck_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –≤—ã–µ–±–∞–ª(–∞) üí™üëâüëå  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–æ–±–Ω—è—Ç—å", ignore_case=True))
async def hug_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –æ–±–Ω—è–ª(–∞) ü§ó  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ—Å–ª–∞—Ç—å –Ω–∞—Ö—É–π", ignore_case=True))
async def hug_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Å–ª–∞–ª(–∞) ü§ó  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –Ω–∞—Ö—É–π üñïüò¨""")


@dp.message_handler(Text("–ø–Ω—É—Ç—å", ignore_case=True))
async def kick_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–Ω—É–ª(–∞) üëû <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—É—â–∏–ø–Ω—É—Ç—å", ignore_case=True))
async def pinch_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É—â–∏–ø–Ω—É–ª(–∞) ü§è  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ–∂–∞—Ç—å —Ä—É–∫—É", ignore_case=True))
async def shake_hands_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ–∂–∞–ª(–∞) —Ä—É–∫—É ü§ù <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—É—â–∏–ø–Ω—É—Ç—å –ø–æ–ø–∫—É", ignore_case=True))
async def pinch_ass_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É—â–∏–ø–Ω—É–ª(–∞) –ø–æ–ø–∫—É üçëü§è <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ—Ç—Ä–æ–≥–∞—Ç—å —á–ª–µ–Ω", ignore_case=True))
async def touch_penis(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Ç—Ä–æ–≥–∞–ª(–∞) —á–ª–µ–Ω üçåü§è <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—Ç—Ä–∞—Ö–Ω—É—Ç—å", ignore_case=True))
async def fuck2_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —Ç—Ä–∞—Ö–Ω—É–ª(–∞) üëâüëå  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–æ—Ç—Å–æ—Å–∞—Ç—å", ignore_case=True))
async def suck_off_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –æ—Ç—Å–æ—Å–∞–ª(–∞) üëÑüçå —É <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ–¥—Ä–æ—á–∏—Ç—å", ignore_case=True))
async def jerk_off_message(message: types.Message):
    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ä–æ—á–∏–ª üçÜ –∏ –ø–æ–ª—É—á–∏–ª —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ üí¶.""")


@dp.message_handler(Text("–ø–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞", ignore_case=True))
async def jerk2_off_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ–¥—Ä–æ—á–∏–ª(–∞) üçÜ  –Ω–∞ <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—É–¥–∞—Ä–∏—Ç—å", ignore_case=True))
async def hit_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É–¥–∞—Ä–∏–ª(–∞) üëä <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")

@dp.message_handler(Text("—É–¥–∞—Ä–∏—Ç—å —Å–∫–æ–≤–æ—Ä–æ–¥–∫–æ–π", ignore_case=True))
async def hit2_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É–¥–∞—Ä–∏–ª(–∞) —Å–∫–æ–≤–æ—Ä–æ–¥–∫–æ–π üí•üëä <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–∂–µ–Ω–∏—Ç—å—Å—è", ignore_case=True))
async def get_married_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    h = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è", "–ù–æ—è–±—Ä—è",
         "–î–µ–∫–∞–±—Ä—è"]

    g = random.choice(h)
    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –∂–µ–Ω–∏–ª—Å—è(–∞—Å—å) ü§¥üë∞ {random.randint(1, 30)} {g} {random.randint(2021, 2031)} –≥–æ–¥—É –Ω–∞ <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–∫–æ–≥–¥–∞ —É–º—Ä–µ—à—å ?", ignore_case=True))
async def when_die_message(message: types.Message):
    if not message.reply_to_message:
        await message.answer("–≠—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    h = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è", "–ù–æ—è–±—Ä—è",
         "–î–µ–∫–∞–±—Ä—è"]
    j = ["üò±", "‚ö∞Ô∏è", "‚ò†Ô∏è"]
    u = random.choice(j)
    g = random.choice(h)

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> —É–º—Ä–µ—Ç {u}  {random.randint(1, 30)} {g} {random.randint(2021, 2031)} –≥–æ–¥–∞.""")


@dp.message_handler(Text("–∫–æ–≥–¥–∞ —è —É–º—Ä—É", ignore_case=True))
async def when2_die_message(message: types.Message):
    h = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è", "–ù–æ—è–±—Ä—è",
         "–î–µ–∫–∞–±—Ä—è"]
    j = ["üò±", "‚ö∞Ô∏è", "‚ò†Ô∏è"]
    u = random.choice(j)
    g = random.choice(h)

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —Ç—ã —É–º—Ä–µ—à—å {u}  {random.randint(1, 30)} {g} {random.randint(2021, 2031)} –≥–æ–¥–∞.""")


#########################################################################################

@dp.message_handler(is_admin=True, commands=["mute", "–º—É—Ç", "–º–æ–ª—á–∏–ø–∏–¥—Ä"], commands_prefix="!")
async def mute_member(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    user = await message.bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
    if user.is_chat_admin():
        await message.reply("üôÖ‚Äç‚ôÇÔ∏è  —è –Ω–µ –±—É–¥—É –º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∞.")
        return

    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
                                           types.ChatPermissions())

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –ø–æ–º–æ–ª—á–∏–∫–∞ —Ç—ã ü§ê""")


@dp.message_handler(is_admin=True, commands=["unmute", "—Ä–∞–∑–º—É—Ç"], commands_prefix="!")
async def unmute_member(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
                                           types.ChatPermissions(True))

    await message.answer(
        f"""–û–ö. <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a> –º–æ–∂–µ—Ç –¥–∞–ª—å—à–µ –±–∞–ª–∞–±–æ–ª–∏—Ç—å ü§° """)

@dp.message_handler(is_admin=True, commands=["ban", "–±–∞–Ω", "–±–∞–Ω–∞–Ω"], commands_prefix="!")
async def ban_member(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    user = await message.bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
    if user.is_chat_admin():
        await message.reply("üôÖ‚Äç‚ôÇÔ∏è  —è –Ω–µ –±—É–¥—É –±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞.")
        return

    await message.bot.kick_chat_member(chat_id=message.chat.id, user_id=message.reply_to_message.from_user.id)

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> —É–ª–µ—Ç–µ–ª –≤ –±–∞–Ω üòâ""")


@dp.message_handler(is_admin=True, commands=["unban", "—Ä–∞–∑–±–∞–Ω"], commands_prefix="!")
async def unban_member(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.bot.unban_chat_member(chat_id=message.chat.id, user_id=message.reply_to_message.from_user.id)

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –≤—ã—à–µ–ª –∏–∑ –±–∞–Ω–∞ üòß""")


@dp.message_handler(is_admin=True, commands=['deleate', "—É–¥–∞–ª–∏—Ç—å"], commands_prefix="!")
async def delete_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    user = await message.bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
    if user.is_chat_admin():
        await message.reply("üôÖ‚Äç‚ôÇÔ∏è  —è –Ω–µ –±—É–¥—É —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞.")
        return

    await message.reply_to_message.delete()
    await message.reply("–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ !")


if name == 'main':
    executor.start_polling(dp, skip_updates=True)
